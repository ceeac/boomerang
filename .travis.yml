language: cpp

dist: xenial
group: travis_latest
cache: ccache

addons:
  apt:
    update: false


matrix:
  include:
    # Clang 4, debug
    - os: linux
      before_install:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main"
        - sudo apt-get update -qq
        - sudo apt-get install -y --no-install-recommends qt5-default flexc++ bisonc++ clang-4.0 clang++-5.0
      env:
        - JOBNAME="Clang4 Debug"
        - BOOMERANG_CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang-4.0 -DCMAKE_CXX_COMPILER=clang++-4.0 -DBOOMERANG_BUILD_UNIT_TESTS=ON"


    # Clang 5, release
    - os: linux
      before_install:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main"
        - sudo apt-get update -qq
        - sudo apt-get install -y --no-install-recommends qt5-default flexc++ bisonc++ clang-5.0 clang++-5.0
      env:
        - JOBNAME="Clang5 Release"
        - BOOMERANG_CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang-5.0 -DCMAKE_CXX_COMPILER=clang++-5.0 -DBOOMERANG_BUILD_UNIT_TESTS=ON"


    # GCC 6, debug with code coverage
    - os: linux
      before_install:
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get update -qq
        - sudo apt-get install -y --no-install-recommends qt5-default flexc++ bisonc++ gcc-6 g++-6 lcov
      env:
        - JOBNAME="GCC6 Debug + CodeCov"
        - BOOMERANG_CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=gcc-6 -DCMAKE_CXX_COMPILER=g++-6 -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_ENABLE_COVERAGE=ON"
      after_success:
        # Create CodeCov report
        - cd ${TRAVIS_BUILD_DIR}
        - lcov --directory . --capture --output-file coverage.info
        - lcov -r coverage.info '*.l' '/usr/*' '*/tests/unit-tests/*' --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -X gcov -F unittests || echo "Codecov did not collect coverage reports"


    # GCC 7, release
    - os: linux
      before_install:
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get update -qq
        - sudo apt-get install -y --no-install-recommends qt5-default flexc++ bisonc++ gcc-7 g++-7
      env:
        - JOBNAME="GCC7 Release"
        - BOOMERANG_CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7 -DBOOMERANG_BUILD_UNIT_TESTS=ON"


    # GCC 8, RelWithDebInfo, regression tests
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - qt5-default
            - g++-8
      env:
        - JOBNAME="GCC8 RelWithDebInfo Regression"
        - BOOMERANG_CMAKE_OPTS="-DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DBOOMERANG_BUILD_REGRESSION_TESTS=ON"
      script:
        cmake $BOOMERANG_CMAKE_OPTS .. && make -j2 check


before_script: mkdir build && cd build
script: cmake $BOOMERANG_CMAKE_OPTS .. && make -j2 && make test

