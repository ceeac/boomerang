// Generated by Flexc++ V2.06.02 on Fri, 13 Oct 2017 14:55:26 +0200

#ifndef SSLScanner_H_INCLUDED_
#define SSLScanner_H_INCLUDED_

// $insert baseclass_h
#include "SSLScannerBase.h"

#include "SSLParserBase.h"

// $insert classHead
class SSLScanner: public SSLScannerBase
{
    public:
        explicit SSLScanner(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        SSLScanner(std::string const &infile, std::string const &outfile);

        // $insert lexFunctionDecl
        int lex();

        inline void setSVal(ssl::SSLParser::STYPE__ *val) { d_val = val; }
    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must
                            // be exec'ed before the patternmatching starts

        void postCode(PostEnum__ type);
                            // re-implement this function for code that must
                            // be exec'ed after the rules's actions.

        ssl::SSLParser::STYPE__* d_val;
};

// $insert scannerConstructors
inline SSLScanner::SSLScanner(std::istream &in, std::ostream &out)
:
    SSLScannerBase(in, out)
{}

inline SSLScanner::SSLScanner(std::string const &infile, std::string const &outfile)
:
    SSLScannerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int SSLScanner::lex()
{
    return lex__();
}

inline void SSLScanner::preCode()
{
    // optionally replace by your own code
}

inline void SSLScanner::postCode(PostEnum__)
{
    // optionally replace by your own code
}

inline void SSLScanner::print()
{
    print__();
}


#endif // SSLScanner_H_INCLUDED_

