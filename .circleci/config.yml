version: 2.0
jobs:
  "macOS":
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run: |
          HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install qt capstone bison flex ccache
          mkdir build && cd build
          cmake -DQt5_DIR=$(brew --prefix qt5)/lib/cmake/Qt5/ -DFLEX_EXECUTABLE=$(brew --prefix flex)/bin/flex -DBISON_EXECUTABLE=$(brew --prefix bison)/bin/bison -DBOOMERANG_BUILD_UNIT_TESTS=ON ..
          make -j2 && make test

  "gcc8-debug-cov":
    docker:
      - image: ceeac/boomerang-build-env:gcc8-debug-cov
    steps:
      - checkout
      - run: |
          mkdir -p ~/.ccache
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Debug -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=ON .. &&
          make -j2 && make test
      - run: |
          lcov --directory . --capture --output-file coverage.info &&
          lcov -r coverage.info '*.l' '/usr/*' '*/tests/unit-tests/*' --output-file coverage.info &&
          lcov --list coverage.info
          echo "Uploading CodeCov reports" && bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -X xcode -F unittests -s "$(pwd)" || echo \"CodeCov coverage report generation failed!\"

  "gcc8-regress-cov":
    docker:
      - image: ceeac/boomerang-build-env:gcc8-regress-cov
    steps:
      - checkout
      - run: |
          mkdir -p ~/.ccache
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBOOMERANG_BUILD_UNIT_TESTS=OFF -DBOOMERANG_BUILD_REGRESSION_TESTS=ON -DBOOMERANG_ENABLE_COVERAGE=ON .. &&
          make -j2 && make check
      - run: |
          lcov --directory . --capture --output-file coverage.info &&
          lcov -r coverage.info '*.l' '/usr/*' '*/tests/unit-tests/*' --output-file coverage.info &&
          lcov --list coverage.info
          echo "Uploading CodeCov reports" && bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -X xcode -F regresstests -s "$(pwd)" || echo \"CodeCov coverage report generation failed!\"

  "gcc7-release":
    docker:
      - image: ceeac/boomerang-build-env:gcc7-release
    steps:
      - checkout
      - run: |
          mkdir -p ~/.ccache
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Release -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j2 && make test

  "clang6-debug":
    docker:
      - image: ceeac/boomerang-build-env:clang6-debug
    steps:
      - checkout
      - run: |
          mkdir -p ~/.ccache
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Debug   -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j2 && make test

  "clang7-release":
    docker:
      - image: ceeac/boomerang-build-env:clang7-release
    steps:
      - checkout
      - run: |
          mkdir -p ~/.ccache
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Release -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j2 && make test

  "source-check":
    docker:
      - image: ceeac/boomerang-build-env:source-check
    steps:
      - checkout
      - run: |
          cd ~/project && ./scripts/run-clang-format.py -r src/ -e "*/machO/objc/*"

workflows:
  version: 2
  build:
    jobs:
     - "macOS"
     - "gcc8-debug-cov"
     - "gcc8-regress-cov"
     - "gcc7-release"
     - "clang6-debug"
     - "clang7-release"
     - "source-check"
