version: 2.0
jobs:
  gcc8-regress-cov:
    docker:
      - image: ceeac/boomerang-build-env:gcc8-regress-cov
    steps:
      - run: |
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBOOMERANG_BUILD_UNIT_TESTS=OFF -DBOOMERANG_BUILD_REGRESSION_TESTS=ON -DBOOMERANG_ENABLE_COVERAGE=ON .. &&
          make -j$(nproc) && make test
      - run: |
          lcov --directory . --capture --output-file coverage.info &&
          lcov -r coverage.info '*.l' '/usr/*' '*/tests/unit-tests/*' --output-file coverage.info &&
          lcov --list coverage.info"
          echo "Uploading CodeCov reports" && bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -X xcode -F regresstests -s "$(pwd)" || echo \"CodeCov coverage report generation failed!\"

  gcc7-release:
    docker:
      - image: ceeac/boomerang-build-env:gcc7-release
    steps:
      - checkout
      - run: |
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Release -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j$(nproc) && make test

  clang6-debug:
    docker:
      - image: ceeac/boomerang-build-env:clang6-debug
    steps:
      - checkout
      - run: |
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Debug   -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j$(nproc) && make test

  clang7-release:
    docker:
      - image: ceeac/boomerang-build-env:clang7-release
    steps:
      - checkout
      - run: |
          cd ~/project && mkdir build && cd build &&
          cmake -DCMAKE_BUILD_TYPE=Release -DBOOMERANG_BUILD_UNIT_TESTS=ON -DBOOMERANG_BUILD_REGRESSION_TESTS=OFF -DBOOMERANG_ENABLE_COVERAGE=OFF .. &&
          make -j$(nproc) && make test


  source-check:
    docker:
      - image: ceeac/boomerang-build-env:source-check
    steps:
      - checkout
      - run: |
          cd ~/project && ./scripts/run-clang-format.py -r src/ -e "*/machO/objc/*"
